library(vcfR)
#Package install if needed
if (!require("vcfR")) {
install.packages("vcfR")
library(vcfR)
}
#Package install if needed
if (!require("vcfR")) {
install.packages("vcfR")
library(vcfR)
}
vcf_file <- read.vcfR("/data/test.vcf")
vcf_file <- read.vcfR("./data/test.vcf")
View(vcf_file)
#Transform to DF
vcf_df <- as.data.frame(vcf_file)
vcf_file <- read.vcfR(path_to_file)
# import file
path_to_file <-  "./data/test.vcf"
vcf_file <- read.vcfR(path_to_file)
vcf_file <- read.vcf(path_to_file)
vcf_data <- read.vcfR(path_to_file)
#Sample loci
sample_loci <- vcf_data[sample(nrow(vcf_data), 1)]
#Package install if needed
if (!require("vcfR")) {
install.packages("vcfR")
library(vcfR)
}
# import file and read data
path_to_file <-  "./data/test.vcf"
vcf_data <- read.vcfR(path_to_file)
#Sample loci
sample_loci <- vcf_data[sample(nrow(vcf_data), 1),]
sample_loci
#Sample loci
sample_loci <- vcf_data[sample(nrow(vcf_data), 10),]
sample_loci
# 10 loci
sample_ten <- vcf_data[sample(nrow(vcf_data), 10),]
# 100 loci
sample_h <- vcf_data[sample(nrow(vcf_data), 100),]
#Sample loci
# 1 locus
sample_one <- vcf_data[sample(nrow(vcf_data), 1),]
# 1000 loci
sample_th <- vcf_data[sample(nrow(vcf_data), 1000),]
sample_loci
sample_loci.variants
sample_loci$alleles
sample_loci[[1]]$alleles
sample_loci[[1]]
View(sample_one)
sample_on$gt
#Sample loci
# 1 locus
sample_one <- vcf_data[sample(nrow(vcf_data), 1),]
sample_one$gt
sample_one["gt"]
sample_one[1]
sample_one[[1]]
sample_one
sample_one$GT
genotype <- geno(sample_one)[,1]
genotype <- extract.gt(sample_one)
View(genotype)
# 1 locus
sample_one <- vcf_data[sample(nrow(vcf_data), 1),]
genotype_one <- extract.gt(sample_one)
# 10 loci
sample_ten <- vcf_data[sample(nrow(vcf_data), 10),]
genotype_ten <- extract.gt(sample_ten)
# 100 loci
sample_h <- vcf_data[sample(nrow(vcf_data), 100),]
genotype_h <- extract.gt(sample_h)
# 1000 loci
sample_th <- vcf_data[sample(nrow(vcf_data), 1000),]
genotype_th <- extract.gt(sample_th)
#Phenotype calculation for each sample
phenotype_one <- rowSums(effects[genotype_one +1])
#Phenotype calculation for each sample
phenotype_one <- rowSums(effects[genotype_one ])
#Phenotype calculation for each sample
phenotype_one <- rowSums(effects[genotype_one + 1])
#Phenotype calculation for each sample
phenotype_one <- rowSums(effects[as.numeric(as.character(genotype_one)) + 1])
#Phenotype calculation for each sample
phenotype_one <- rowSums(effects[as.numeric(genotype_one) + 1])
#Phenotype calculation for each sample
genotype_one
#Phenotype calculation for each sample
genotype_one
allele <- strsplit(genotype, "\\|")
# convert allele into numeric
alleles <- lapply(alleles, as.numeric)
#split genotype data into alleles
alleles <- strsplit(genotype, "\\|")
# convert allele into numeric
alleles <- lapply(alleles, as.numeric)
alleles
#calculate genotype
genotype_one_num <- unlist(lapply(allele,sum))
#calculate genotype
genotype_one_num <- unlist(lapply(alleles,sum))
genotyp_one
genotype_one_num# 10 loci
#phenotype
phenotype <- effects[genotype_one_num +1]
#phenotype
phenotype <- effects[genotype_one_num]
#phenotype
phenotype <- effects[genotype_one_num- +1 ]
#phenotype
phenotype <- effects[genotype_one_num +1 ]
install.packages("vcfR")
maf_obj <- maf(vcf_data, element=2) # element 2 for minor allele
library(vcfR)
## reproducibility
set.seed(123)
# import file and read data
path_to_file <-  "./data/"
vcf_data <- read.vcfR(path_to_file)
# import file and read data
path_to_file <-  "./data/pop1.vcf"
vcf_data <- read.vcfR(path_to_file)
maf_obj <- maf(vcf_data, element=2) # element 2 for minor allele
#Filter the data
filtered_vcf <- vcf_obj[maf_obj$freq > 0]
maf_obj <- maf(vcf_data, element=2) # element 2 for minor alleleÂ¨
#Filter the data
filtered_vcf <- vcf_data[maf_obj$freq > 0]
#Sample loci and get genotype
# 1 locus
sample_one <- vcf_data[sample(nrow(vcf_data), 1),]
genotype_one <- extract.gt(sample_one)
#split genotype data into alleles
alleles <- strsplit(genotype, "\\|")
# convert allele into numeric
alleles <- lapply(alleles, as.numeric)
#calculate genotype
genotype_one_num <- unlist(lapply(alleles,sum))
# 10 loci
sample_ten <- vcf_data[sample(nrow(vcf_data), 10),]
genotype_ten <- extract.gt(sample_ten)
# 100 loci
sample_h <- vcf_data[sample(nrow(vcf_data), 100),]
genotype_h <- extract.gt(sample_h)
# 1000 loci
sample_th <- vcf_data[sample(nrow(vcf_data), 1000),]
genotype_th <- extract.gt(sample_th)
# Normal distribution of effect size
effects <- rnorm(2, mean = 0, sd = 1)
#phenotype
phenotype <- effects[genotype_one_num +1 ]
#calculate genotype
genotype_one_num <- unlist(lapply(alleles,sum))
#split genotype data into alleles
alleles <- strsplit(genotype, "\\|")
# convert allele into numeric
alleles <- lapply(alleles, as.numeric)
#calculate genotype
genotype_one_num <- unlist(lapply(alleles,sum))
#split genotype data into alleles
alleles <- strsplit(genotype, "\\|")
#Sample loci and get genotype
# 1 locus
sample_one <- vcf_data[sample(nrow(vcf_data), 1),]
genotype_one <- extract.gt(sample_one)
#split genotype data into alleles
alleles <- strsplit(genotype_one, "\\|")
# convert allele into numeric
alleles <- lapply(alleles, as.numeric)
#calculate genotype
genotype_one_num <- unlist(lapply(alleles,sum))
# 10 loci
sample_ten <- vcf_data[sample(nrow(vcf_data), 10),]
genotype_ten <- extract.gt(sample_ten)
# 100 loci
sample_h <- vcf_data[sample(nrow(vcf_data), 100),]
genotype_h <- extract.gt(sample_h)
# 1000 loci
sample_th <- vcf_data[sample(nrow(vcf_data), 1000),]
genotype_th <- extract.gt(sample_th)
# Normal distribution of effect size
effects <- rnorm(2, mean = 0, sd = 1)
#phenotype
phenotype <- effects[genotype_one_num +1 ]
phenotype
sum(phenotype)
sum(phenotype)
phenotype
